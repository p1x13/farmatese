/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package famatese;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Medicamento extends javax.swing.JFrame {

    String coneccionbd = ("jdbc:sqlserver://localhost:1433;databaseName=farmacia_tese;user=sa;password=sasa");
    ArrayList<String> listaAcciones = new ArrayList<>();
    ArrayList<String> listaMonodrogas = new ArrayList<>();

    public Medicamento() {
        initComponents();
        consultarTodo();
        actualizarList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        editar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        agregar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        boxAccion = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        pre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        costo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        boxMono = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel2.setText("Nombre");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 40, 100, 40);

        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });
        getContentPane().add(nombre);
        nombre.setBounds(100, 40, 130, 30);

        editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/famatese/7modificar.png"))); // NOI18N
        editar.setToolTipText("Modificar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });
        getContentPane().add(editar);
        editar.setBounds(350, 220, 70, 60);

        eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/famatese/5eliminar.png"))); // NOI18N
        eliminar.setToolTipText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(eliminar);
        eliminar.setBounds(460, 220, 70, 60);

        agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/famatese/4agregar.png"))); // NOI18N
        agregar.setToolTipText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });
        getContentPane().add(agregar);
        agregar.setBounds(100, 220, 70, 60);

        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/famatese/2buscarr.png"))); // NOI18N
        buscar.setToolTipText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        getContentPane().add(buscar);
        buscar.setBounds(220, 220, 70, 60);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("MEDICAMENTO");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(130, 10, 350, 20);

        boxAccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(boxAccion);
        boxAccion.setBounds(420, 100, 140, 26);

        jLabel6.setText("presentacion");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(310, 50, 80, 20);
        getContentPane().add(pre);
        pre.setBounds(410, 40, 150, 30);

        jLabel1.setText("costo");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 110, 50, 20);
        getContentPane().add(costo);
        costo.setBounds(100, 100, 130, 30);

        jLabel3.setText("accion");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(340, 110, 41, 16);

        jLabel4.setText("monodroga");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 170, 70, 20);

        boxMono.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(boxMono);
        boxMono.setBounds(100, 160, 130, 30);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 620, 310);

        jMenu2.setText("Exit");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Menu Principal");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(632, 374));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        if((Inicio.getPuesto().equals("Administrador"))||(Inicio.getPuesto().equals("Supervisor"))||(Inicio.getPuesto().equals("Vendedor"))){
        Object dato[] = new Object[5];
        String clave = nombre.getText();
        if (clave.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Ingrese un nombre para buscar");
        } else {
            try {
                DefaultTableModel tabla = new DefaultTableModel();
                Connection con;
                con = DriverManager.getConnection(coneccionbd);
                Statement stm = con.createStatement();
                ResultSet rs = stm.executeQuery("Select * from medicamentos where nom_m='" + clave + "'");
       tabla.addColumn("Nombre");
            tabla.addColumn("Presentacion");
            tabla.addColumn("Csto");
            tabla.addColumn("Accion");
            tabla.addColumn("Monodroga");
                while (rs.next()) {
                    
                    for (int i = 0; i < 5; i++) {
                        dato[i] = rs.getString(i + 1).toUpperCase();
                    }
                    tabla.addRow(dato);
                }
              
                clearfields();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "No se encontraron resultados");
            }
        }
        nombre.setText((String)dato[0]);
        pre.setText((String)dato[1]);
        costo.setText((String)dato[2]);
        String compararAcc = (String) dato[3];
        boxAccion.setSelectedIndex((listaAcciones.indexOf(compararAcc)) / 2);
        String compararMono = (String) dato[4];
        boxMono.setSelectedIndex((listaMonodrogas.indexOf(compararMono)) / 2);
        } else
            JOptionPane.showMessageDialog(rootPane,"Debe iniciar sesiÃ³n para poder buscar");
    }//GEN-LAST:event_buscarActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
         if((Inicio.getPuesto().equals("Administrador"))||(Inicio.getPuesto().equals("Supervisor"))){
        if (nombre.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese un ID de farmacia");
        } else if (pre.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese el nombre");
        } else if (costo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese el horario");
        } else if (!verificarID()) { //Si no existe el ID entra en la creaci+on
            String n = nombre.getText();
            String p = pre.getText();
            String c = costo.getText();
            int idAcc = (boxAccion.getSelectedIndex() * 2);
            String accion = (String) listaAcciones.get(idAcc);
            int idMono = (boxMono.getSelectedIndex() * 2);
            String mono = (String) listaMonodrogas.get(idMono);
            try {
                DefaultTableModel tabla = new DefaultTableModel();
                Connection con;
                con = DriverManager.getConnection(coneccionbd);
                Statement stm = con.createStatement();
                stm.executeUpdate("insert into medicamento values ('" + n + "','"
                        + p + "','"
                        + c + "','"
                        + accion + "','"
                        + mono + "')");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "No se pudo crear", "Compruebe los datos", 2);
            }
        }
        } else
            JOptionPane.showMessageDialog(rootPane,"Solo los administradores y supervisores pueden agregar, por favor inicie sesiÃ³n");
        consultarTodo();
        clearfields();
    }//GEN-LAST:event_agregarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
       if(Inicio.getPuesto().equals("Administrador")){
        String clave;
        clave = nombre.getText();
        int idAccion = (boxAccion.getSelectedIndex() * 2);
        int idMono = (boxMono.getSelectedIndex() * 2);
        String acc= (String) listaAcciones.get(idAccion);
        String mon= (String) listaMonodrogas.get(idMono);
        String eliminar = "Presentacion= '" + pre.getText() + "' \n"
                + "Costo= '" + costo.getText() + "'\n"
                + "Accion= '" + acc + "'\n"
                + "Monodroga= '" + mon + "'";
        int procd = JOptionPane.showConfirmDialog(rootPane, eliminar, ("Se eliminara la informacion para: " + nombre.getText()), 2, 2);
        System.out.println(procd);
        if (procd <= 0) {
            try {
                DefaultTableModel tabla = new DefaultTableModel();
                Connection con;
                con = DriverManager.getConnection(coneccionbd);
                Statement stm = con.createStatement();
                int act = stm.executeUpdate("delete from medicamento where nom_m='" + clave + "'");
                if (act >= 1) {
                            JOptionPane.showMessageDialog(rootPane, "Eliminado");
                            consultarTodo();
                            clearfields();
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "no se puede eliminar");
                        }
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        }
        else 
            JOptionPane.showMessageDialog(rootPane,"Solo los administradores pueden eliminar");
    }//GEN-LAST:event_eliminarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.setVisible(false);
        Inicio obj = new Inicio();
        obj.show();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        if(Inicio.getPuesto().equals("Administrador")){
        if (!(nombre.getText().equals(""))) {
            System.out.println("paso 1 no esta vacia la clave");
            if (verificarID()) {
                System.out.println("paso2");
                int idAccion = (boxAccion.getSelectedIndex() * 2);
                int idMono = (boxMono.getSelectedIndex() * 2);
                String acc = (String) listaAcciones.get(idAccion);
                String mon = (String) listaMonodrogas.get(idMono);
                String actualizar = "Nombre= '" + nombre.getText() + "' \n"
                        + "presentacion= '" + pre.getText() + "'\n"
                        + "costo= '" + costo.getText() + "'\n"
                        + "Accion= '" + acc + "'\n"
                        + "Monodroga= '" + mon + "'";
                int procd = JOptionPane.showConfirmDialog(rootPane, actualizar, ("Se actualizara la informacion para: " + nombre.getText()), 2, 2);
                System.out.println(procd);
                if (procd <= 0) {
                    try {
                        Connection con = DriverManager.getConnection(coneccionbd);
                        Statement stm = con.createStatement();

                        int act = stm.executeUpdate("update medicamento set "                              
                                + "pre_m='" + pre.getText() + "',"
                                + "costo='" + costo.getText() + "',"
                                + "cod_a1='" + acc + "',"
                                + "cod_m1='" + mon + "'"
                                + "where nom_M='" + nombre.getText() + "'");
                        if (act >= 1) {
                            JOptionPane.showMessageDialog(rootPane, "Actualizado");
                            consultarTodo();
                            clearfields();
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "no se puede actualizar");
                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
        } else
            JOptionPane.showMessageDialog(rootPane, "Solo el administrador puede editar");
    }//GEN-LAST:event_editarActionPerformed

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Medicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Medicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Medicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Medicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Medicamento().setVisible(true);
            }
        });
    }

    /*----------------------------------------------------------------------------------------------------------------*/
 /*----------------------------------------------------------------------------------------------------------------*/
    //MY METHODÂ´S 
    //Consultar tabla, usando views en DB 
    private void consultarTodo() {
        try {
            DefaultTableModel tabla = new DefaultTableModel();
            Connection con;
            con = DriverManager.getConnection(coneccionbd);
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("Select * from medicamentos");
            tabla.addColumn("Nombre");
            tabla.addColumn("Presentacion");
            tabla.addColumn("Csto");
            tabla.addColumn("Accion");
            tabla.addColumn("Monodroga");
            while (rs.next()) {
                Object dato[] = new Object[5];
                for (int i = 0; i < 5; i++) {
                    dato[i] = rs.getString(i + 1).toUpperCase();
                }
                tabla.addRow(dato);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //Actualizar cajas
    private void actualizarList() {
        boxAccion.removeAllItems();
        listaAcciones = acciones();
        for (int i = 1; i < listaAcciones.size(); i += 2) {
            boxAccion.addItem(listaAcciones.get(i));
        }
        boxMono.removeAllItems();
        listaMonodrogas = monodrogas();
        for (int j = 1; j < listaMonodrogas.size(); j += 2) {
            boxMono.addItem(listaMonodrogas.get(j));
        }
    }

    // Caja farmaceuticos
    public ArrayList<String> monodrogas() {
        ArrayList<String> monodrogas = new ArrayList<>();
        try {
            Connection con = DriverManager.getConnection(coneccionbd);
            Statement stm = con.createStatement();
            String q = "select cod_m,nci_m from monodroga";
            ResultSet res = stm.executeQuery(q);
            while (res.next()) {
                Object dato[] = new Object[2];
                for (int i = 0; i < 2; i++) {
                    dato[i] = res.getString(i + 1).toUpperCase();
                    monodrogas.add((String) dato[i]);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return monodrogas;
    }

    //Caja acciones
    public ArrayList<String> acciones() {
        ArrayList<String> acciones = new ArrayList<>();
        try {
            Connection con = DriverManager.getConnection(coneccionbd);
            Statement stm = con.createStatement();
            String q = "select cod_a,nom_a from accion";
            ResultSet res = stm.executeQuery(q);
            while (res.next()) {
                Object dato[] = new Object[2];
                for (int i = 0; i < 2; i++) {
                    dato[i] = res.getString(i + 1).toUpperCase();
                    acciones.add((String) dato[i]);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return acciones;
    }

    //Limpiar campos
    public void clearfields() {
        nombre.setText("");
        pre.setText("");
        costo.setText("");
        boxAccion.setSelectedIndex(0);
        boxMono.setSelectedIndex(0);
    }

    //verificarID
    private boolean verificarID() {
        String buscar = nombre.getText();
        try {
            Connection con;
            con = DriverManager.getConnection(coneccionbd);
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("Select * from medicamento where nom_m='" + buscar + "'");
            while (rs.next()) {
                nombre.setText(String.valueOf(rs.getString(1)));
                return true;
            }

        } catch (Exception e) {
        }
        return false; //si no encontro nada falso

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JComboBox<String> boxAccion;
    private javax.swing.JComboBox<String> boxMono;
    private javax.swing.JButton buscar;
    private javax.swing.JTextField costo;
    private javax.swing.JButton editar;
    private javax.swing.JButton eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField pre;
    // End of variables declaration//GEN-END:variables
}
